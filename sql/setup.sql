DROP TABLE IF EXISTS submissions;
DROP TABLE IF EXISTS tickets;
-- DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS assignments;
DROP TABLE IF EXISTS cohort_to_syllabus;
DROP TABLE IF EXISTS syllabus;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS entities;
DROP TABLE IF EXISTS status;
DROP TABLE IF EXISTS user_to_cohort;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS cohorts;
DROP TABLE IF EXISTS roles;

CREATE TABLE roles (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL,
  description TEXT NOT NULL
);

CREATE TABLE cohorts (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  created_on TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  month TEXT,
  year INT,
  title TEXT
);

CREATE TABLE users (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  created_on TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  username TEXT NOT NULL,
  email TEXT,
  avatar TEXT,
  role INT,
  FOREIGN KEY (role) REFERENCES roles(id)
);

CREATE TABLE status (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL
);

-- CREATE TABLE comments (
--   id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
--   created_on TIMESTAMPTZ NOT NULL DEFAULT NOW(),
--   text TEXT,
--   user_id BIGINT NOT NULL,
--   target_entity INT NOT NULL,
--   target_entity_id INT NOT NULL,
--   FOREIGN KEY (user_id) REFERENCES users(id)
-- );

CREATE TABLE syllabus (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  title TEXT,
  created_on TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  thumbnail_photo TEXT,
  created_by BIGINT NOT NULL,
  owner_id BIGINT NOT NULL,
  description TEXT,
  status_id INT NOT NULL,
  FOREIGN KEY (status_id) REFERENCES status(id),
  FOREIGN KEY (created_by) REFERENCES users(id),
  FOREIGN KEY (owner_id) REFERENCES users(id)
);

CREATE TABLE cohort_to_syllabus (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  cohort_id INT NOT NULL,
  syllabus_id INT NOT NULL,
  FOREIGN KEY (syllabus_id) REFERENCES syllabus(id),
  FOREIGN KEY (cohort_id) REFERENCES cohorts(id)
);

CREATE TABLE user_to_cohort (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  cohort_id INT NOT NULL,
  user_id INT NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (cohort_id) REFERENCES cohorts(id)
);

CREATE TABLE assignments (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  title TEXT,
  description TEXT,
  syllabus_id INT NOT NULL,
  due_date TIMESTAMP,
  total_points INT,
  status_id INT NOT NULL,
  template_link TEXT,
  example_link TEXT,
  FOREIGN KEY (status_id) REFERENCES status(id),
  FOREIGN KEY (syllabus_id) REFERENCES syllabus(id)
);

CREATE TABLE submissions (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  created_on TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  text TEXT,
  status_id INT NOT NULL,
  assignment_id INT NOT NULL,
  user_id INT NOT NULL,
  grade INT,
  repo_link TEXT,
  FOREIGN KEY (status_id) REFERENCES status(id),
  FOREIGN KEY (assignment_id) REFERENCES assignments(id),
  FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE tickets (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  created_on TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  text TEXT,
  status_id INT NOT NULL,
  assignment_id INT NOT NULL,
  ta_id INT NOT NULL,
  user_id INT NOT NULL,
  FOREIGN KEY (status_id) REFERENCES status(id),
  FOREIGN KEY (assignment_id) REFERENCES assignments(id),
  FOREIGN KEY (ta_id) REFERENCES users(id),
  FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE entities (
  id BIGINT PRIMARY KEY,
  name text NOT NULL
);

CREATE TABLE comments (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  created_on TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  text TEXT,
  status_id INT NOT NULL,
  user_id INT NOT NULL,
  target_entity INT NOT NULL,
  target_entity_id INT NOT NULL,
  FOREIGN KEY (status_id) REFERENCES status(id),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (target_entity) REFERENCES entities(id)
);

-- write seed info for each table

INSERT INTO roles (name, description) VALUES
('Student', 'just a student'),
('TA', 'Teachers assistant for each cohort'),
('Teacher', 'Leader of the cohort'),
('Admin', 'Full CRUD access across the application');

INSERT INTO status (name) VALUES ('Pending'), ('Active'), ('Archived'), ('Completed');

INSERT INTO cohorts (month, year, title) VALUES
('February', 2022, 'february-2022'),
('January', 2022, 'january-2022');

INSERT INTO users (username, email, avatar, role) VALUES
('Marty', 'Marty@testAlchemy.com', '', 4), --1
('Dani', 'Dani@testAlchemy.com', '', 3), --2
('Juli', 'Juli@testAlchemy.com', '', 3), --3
('Madden', 'Madden@testAlchemy.com', '', 2), --4
('Pete', 'Pete@testAlchemy.com', '', 2), --5
('Tanner', 'Tanner@testAlchemy.com', '', 2), --6
('Triana', 'Triana@testAlchemy.com', '', 2), --7
('Delaney', 'Delaney@testAlchemy.com', '', 1), --8
('Riley', 'Riley@testAlchemy.com', '', 1), --9
('Beau', 'Beau@testAlchemy.com', '', 1), --10
('Will', 'Will@testAlchemy.com', '', 1), --11
('Denver', 'Denver@testAlchemy.com', '', 1), --12
('Alex', 'Alex@testAlchemy.com', '', 1); --13

INSERT INTO syllabus (title, thumbnail_photo, created_by, owner_id, description, status_id)
VALUES
('Module 1: Prework', 'url', 1, 1, '1st module of Alchemy', 1),
('Module 2: Web', 'url', 1, 1, '2nd module of Alchemy', 1),
('Module 3: React', 'url', 1, 1, '3rd module of Alchemy', 1),
('Module 4: Advanced React', 'url', 1, 1, '4th module of Alchemy', 1),
('Module 5: Backend', 'url', 1, 1, '5th module of Alchemy', 1);

INSERT INTO cohort_to_syllabus (cohort_id, syllabus_id) VALUES
(1, 1),
(1, 2),
(1, 3),
(1, 5),
(2, 1),
(2, 2),
(2, 3),
(2, 4),
(2, 5);

INSERT INTO assignments (title, description, syllabus_id, due_date, total_points, status_id, template_link, example_link) VALUES
('Complete Typing Test', '{"blocks":[{"key":"5f2","text":"Being able to type at a minimum level is essential to using your computer as a software developer. Both coding and communications require accurate typing at a reasonable pace.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ejs8b","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d8srj","text":"Complete the 1-Minute Typing TestLinks to an external site..","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":13,"length":46,"key":0}],"data":{}},{"key":"f4gjk","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e90he","text":"You will need to get at least 35 WPM and an accuracy of 85% or greater to be able to participate at Alchemy.\nYou can re-take the test as many times as necessary.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":24,"length":46,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9fqrc","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7ap1q","text":"To submit, upload a screenshot of your passing score.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.typing.com/student/typing-test/1-minute","rel":"noreferrer noopener","target":"_blank","url":"https://www.typing.com/student/typing-test/1-minute"}}}}', 1, null, 1, 4, null, null),
('Sign up for a Github account', '{"blocks":[{"key":"5f2","text":"Go to GitHubLinks to an external site. and sign up for an account. (Its free! Theres no cost for a developer account.)","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":6,"length":32,"key":0}],"data":{}},{"key":"6pevu","text":"Do not forget your GitHub account password. You will need it later in class when we start using GitHub.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":43,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bqonr","text":"Choose a user name that works in professional settings as employers will be looking at this. Ideally, you would use your first and last name: first-last, first-mi-last, firstlast, last-first, etc.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cpvcc","text":"Please submit a link to your GitHub account.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/","rel":"noreferrer noopener","target":"_blank","url":"https://github.com/"}}}} ', 1, null, 1, 4, null, null),
('Complete Computer Set Up', '{"blocks":[{"key":"5f2","text":"Youll need your computer to be set up with modern developer tooling.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"r83j","text":"This part of the prework can be the most unpredictable. Because type of computer, operating system, and version is different - it is not uncommon to experience some failures in the setup process. If you run into issues, head on over to the prework Slack workspace, or attend one of our computer setup support sessions. Also be aware that you can continue to do the online prework assignments even if you are having difficulties with computer setup.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":55,"style":"BOLD"},{"offset":338,"length":53,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"a23vp","text":"Follow each of the steps in the Computer Set Up GuideLinks to an external site..","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":32,"length":47,"key":0}],"data":{}},{"key":"10q5p","text":"To submit:\nFrom a new terminal window that you open after running the install steps, enter each of these commands into your terminal window one at a time, and upload a single screenshot of the terminal window with the results after you have entered them all. Check that each command is returning a version number or configuration information. If it says \"command not found\" it did not work (please reach out on #computer-setup Slack channel if you are stuck).","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":11,"length":72,"style":"BOLD"},{"offset":168,"length":6,"style":"BOLD"},{"offset":341,"length":2,"style":"BOLD"},{"offset":381,"length":3,"style":"BOLD"},{"offset":18,"length":19,"style":"ITALIC"},{"offset":52,"length":5,"style":"ITALIC"},{"offset":259,"length":82,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"atjjg","text":"git --version\n\nnode --version\n\nnpm --version\n\ncode --version\n\neslint --version \n\ngit config --list","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ajbgq","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/computer-setup","rel":"noreferrer noopener","target":"_blank","url":"https://github.com/alchemycodelab/computer-setup"}}}} ', 1, null, 1, 4, null, null),
('Read Terminal Tutorial Chapters', '{"blocks":[{"key":"5f2","text":"Congratulations, you have completed the prework required for Dev 101!","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":69,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dehsi","text":"We are working on an automated process, but in the mean time, if you are seeing this assignment then click \"Submit\" to let us know you are ready for Dev 101!","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"75b8i","text":"If you have additional questions, please reach out to us in the Prework Slack group, or email us at instruction@alchemycodelab.com.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":100,"length":30,"key":0}],"data":{}},{"key":"c2ccg","text":"If you are enrolling in the Alchemy Program in Professional Software Development, or are curious to learn more, continue on with the \"More: Ready to Start at Alchemy\" Prework","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":133,"length":41,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"ajbgq","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"mailto:instruction@alchemycodelab.com","url":"mailto:instruction@alchemycodelab.com"}}}}', 1, null, 1, 4, null, null),
('Read Terminal Cheat Sheet', '{"blocks":[{"key":"5f2","text":"A significant aspect of creating software is interacting directly with text files. One of the most efficient ways to do this is through the Terminal, or Command Line.\nThis tutorial is for everyone, even though the word \"Linux\" is in the title!","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":167,"length":76,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"af5qo","text":"Please read the chapters below, and submit a brief (two or three sentences is plenty) summary of something you learned.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fln7n","text":"The Command Line Links to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":43,"key":0}],"data":{}},{"key":"aiqij","text":"System NavigationLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":43,"key":1}],"data":{}},{"key":"bgp8","text":"FilesLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":31,"key":2}],"data":{}},{"key":"1bepr","text":"File ManipulationLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":43,"key":3}],"data":{}},{"key":"ajbgq","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://ryanstutorials.net/linuxtutorial/commandline.php","rel":"noreferrer noopener","target":"_blank","url":"https://ryanstutorials.net/linuxtutorial/commandline.php"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://ryanstutorials.net/linuxtutorial/navigation.php","rel":"noreferrer noopener","target":"_blank","url":"https://ryanstutorials.net/linuxtutorial/navigation.php"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://ryanstutorials.net/linuxtutorial/aboutfiles.php","rel":"noreferrer noopener","target":"_blank","url":"https://ryanstutorials.net/linuxtutorial/aboutfiles.php"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://ryanstutorials.net/linuxtutorial/filemanipulation.php","rel":"noreferrer noopener","target":"_blank","url":"https://ryanstutorials.net/linuxtutorial/filemanipulation.php"}}}} ', 1, null, 1, 4, null, null),
('Read Git Tutorial', '{"blocks":[{"key":"5f2","text":"A significant aspect of creating software is interacting directly with text files. One of the most efficient ways to do this is through the Terminal, or Command Line.\nThis tutorial is for everyone, even though the word \"Linux\" is in the title!","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":167,"length":76,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"21l3n","text":"Please read the chapter below, and submit a brief (two or three sentences is plenty) summary of something you learned or a new command you discovered","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fj1bk","text":"Command Cheat SheetLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":45,"key":0}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://ryanstutorials.net/linuxtutorial/cheatsheet.php","rel":"noreferrer noopener","target":"_blank","url":"https://ryanstutorials.net/linuxtutorial/cheatsheet.php"}}}}', 1, null, 1, 4, null, null),
('Watch Git and Github Videos', '{"blocks":[{"key":"5f2","text":"As a developer, youll need to manage your code as you make changes, and be able to store it in the cloud.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3d0t3","text":"Please read the chapter below, and submit a brief (two or three sentences is plenty) summary of something you learned.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5dp9n","text":"Basic Git Commands With Examples (Links to an external site.)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":61,"key":0}],"data":{}},{"key":"8qfcl","text":"IMPORTANT: This tutorial has you create a new git repository using the command","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fbgug","text":"git init","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7efu","text":"make sure you do this IN A NEW EMPTY FOLDER not your root directory.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":22,"length":22,"style":"ITALIC"},{"offset":22,"length":22,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://rubygarage.org/blog/most-basic-git-commands-with-examples","rel":"noreferrer noopener","target":"_blank","url":"https://rubygarage.org/blog/most-basic-git-commands-with-examples"}}}}', 1, null, 1, 4, null, null),
('Complete Git Branching Tutorials', '{"blocks":[{"key":"5f2","text":"Please watch the videos below and submit a brief (two or three sentences is plenty) summary of something you learned.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a2c5j","text":"This video goes over the concepts of commits and repositories, as well as an overview of the GitHub User Interface:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"coc8q","text":"The Coding Train: GitHubLinks to an external site.📷","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":51,"style":"BOLD"}],"entityRanges":[{"offset":0,"length":50,"key":0},{"offset":50,"length":1,"key":1}],"data":{}},{"key":"f4aq3","text":"This video aims to give you a brief introduction to the Command Line and show you some of the most frequently used commands:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dl4bn","text":"The Coding Train: Git & Intro to the Command LineLinks to an external site.📷","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":76,"style":"BOLD"}],"entityRanges":[{"offset":0,"length":75,"key":2},{"offset":75,"length":1,"key":3}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.youtube.com/watch?v=BCQHnlnPusY&list=PLRqwX-V7Uu6ZF9C0YMKuns9sLDzK6zoiV&index=1","rel":"noreferrer noopener","target":"_blank","url":"https://www.youtube.com/watch?v=BCQHnlnPusY&list=PLRqwX-V7Uu6ZF9C0YMKuns9sLDzK6zoiV&index=1"}},"1":{"type":"IMAGE","mutability":"IMMUTABLE","data":{"src":"https://canvas.instructure.com/images/play_overlay.png"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.youtube.com/watch?v=oK8EvVeVltE&list=PLRqwX-V7Uu6ZF9C0YMKuns9sLDzK6zoiV&t=203s","rel":"noreferrer noopener","target":"_blank","url":"https://www.youtube.com/watch?v=oK8EvVeVltE&list=PLRqwX-V7Uu6ZF9C0YMKuns9sLDzK6zoiV&t=203s"}},"3":{"type":"IMAGE","mutability":"IMMUTABLE","data":{"src":"https://canvas.instructure.com/images/play_overlay.png"}}}}', 1, null, 1, 4, null, null),
('Read Git Comprehensive Guide', '{"blocks":[{"key":"5f2","text":"Read through Git Tutorial, A Comprehensive Guide. (Links to an external site.)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":13,"length":65,"style":"BOLD"}],"entityRanges":[{"offset":13,"length":65,"key":0}],"data":{}},{"key":"8vsrh","text":"Dont try and memorize everything, use this as a guide to gain some additional information and knowledge about the capabilities of Git.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a41g","text":"Submit a short (2-3 sentences) write up of something new you learned about Git.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://blog.udemy.com/git-tutorial-a-comprehensive-guide","rel":"noreferrer noopener","target":"_blank","url":"https://blog.udemy.com/git-tutorial-a-comprehensive-guide"}}}}', 1, null, 1, 4, null, null),
('Complete HTML Exercises Part 1', '{"blocks":[{"key":"5f2","text":"HTML provides the structured content that runs the internet.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9d31u","text":"Please complete the following exercises. Each one will take approximately 1-2 hours, and at the end you will need to submit a screenshot showing that youve completed them.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vlqo","text":"(Note: for the following tutorials on Codecademy, you do not need a PRO account.)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"},{"offset":1,"length":4,"style":"ITALIC"},{"offset":57,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"7u1lg","text":"Intro To HTML (Links to an external site.)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":42,"key":0}],"data":{}},{"key":"69f29","text":"Your screenshot will need to show a yellow checkmark for the Introduction to HTML lesson, or that the Elements and Structure section is 20% complete. Please find this under the Syllabus section of the Codecademy course. Example below.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-html/lessons/intro-to-html/exercises/intro","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-html/lessons/intro-to-html/exercises/intro"}}}}', 1, null, 1, 4, null, null),
('Complete HTML Exercises Part 2', '{"blocks":[{"key":"5f2","text":"HTML provides the structured content that runs the internet.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dhotm","text":"Please complete the following exercises. Each one will take approximately 1-2 hours, and at the end you will need to submit a screenshot showing that youve completed them.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1elp8","text":"(Note: for the following tutorials on Codecademy, you do not need a PRO account.)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"},{"offset":1,"length":4,"style":"ITALIC"},{"offset":57,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"n5bv","text":"HTML Document Standards (Links to an external site.)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":52,"key":0}],"data":{}},{"key":"3j2qo","text":"Semantic HTML (Links to an external site.)\n\nOnce finished, individual exercises will be listed at the following percentages:","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":42,"key":1}],"data":{}},{"key":"329b2","text":"Elements and Structure: 40%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fe0a","text":"Tables: 33%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bmt2f","text":"Forms: 50%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6p4g9","text":"Semantic HTML: 33%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"duqum","text":"If HTML Exercises Part 1 is also complete, your submission screenshot should show Course Progress at 100% completion. Otherwise, your screenshot should detail the completion percentages listed above.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-html/lessons/html-document-standards/exercises/prepare-html","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-html/lessons/html-document-standards/exercises/prepare-html"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-html/lessons/semantic-html","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-html/lessons/semantic-html"}}}}', 1, null, 1, 4, null, null),
('Complete CSS Exercises Part 1', '{"blocks":[{"key":"5f2","text":"CSS controls the styling and layout of your HTML.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e4me8","text":"Please complete the following exercises. Each one will take approximately 1-2 hours, and at the end you will need to submit a screenshot showing that youve completed them.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fsqka","text":"(Note: for the following tutorials on Codecademy, you do not need a PRO account.)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"},{"offset":1,"length":4,"style":"ITALIC"},{"offset":57,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"4661s","text":"Intro to CSS (Syntax and Selectors) (Links to an external site.) - When finished will show 50% completion.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":64,"key":0}],"data":{}},{"key":"d0isu","text":"Visual Rules (Links to an external site.) - When finished will show 33% completion.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":41,"key":1}],"data":{}},{"key":"8d0n0","text":"Color (Links to an external site.) - When finished will show 33% completion.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":34,"key":2}],"data":{}},{"key":"9vo8p","text":"Typography (Links to an external site.) - When finished will show 33%.\n\nYour screenshot may only show 59% total course completion, or the percentages listed above). See below for an example.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":39,"key":3}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-css/lessons/learn-css-setup-and-syntax/exercises/intro-to-css","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-css/lessons/learn-css-setup-and-syntax/exercises/intro-to-css"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-css/lessons/css-visual-rules","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-css/lessons/css-visual-rules"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-css/lessons/color","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-css/lessons/color"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-css/lessons/css-typography","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-css/lessons/css-typography"}}}}', 1, null, 1, 4, null, null),
('Complete CSS Exercises Part 2', '{"blocks":[{"key":"5f2","text":"CSS controls the styling and layout of your HTML.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"h43f","text":"Please complete the following exercises. Each one will take approximately 1-2 hours, and at the end you will need to submit a screenshot showing that youve completed them.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"564nq","text":"(Note: for the following tutorials on Codecademy, you do not need a PRO account.)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"},{"offset":1,"length":4,"style":"ITALIC"},{"offset":57,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"eovt1","text":"The Box Model (Links to an external site.) - This is paired with Changing the Box Model below. When both are finished this section will show as 33% complete.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":42,"key":0}],"data":{}},{"key":"c1uo8","text":"Changing the Box Model (Links to an external site.)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":51,"key":1}],"data":{}},{"key":"dc0nj","text":"Display and Positioning (Links to an external site.) - When finished, this exercise will show as 33% complete.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":52,"key":2}],"data":{}},{"key":"4fefu","text":"Example: If CSS Exercises Part 1 is also complete, your screenshot should show 100% completion for this exercise suite. Otherwise, please submit a screenshot detailing The Box Model and Display and Positioning at 33% complete.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-css/lessons/box-model-intro","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-css/lessons/box-model-intro"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-css/lessons/box-model-new","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-css/lessons/box-model-new"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-css/lessons/css-display-positioning","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-css/lessons/css-display-positioning"}}}}', 1, null, 1, 4, null, null),
('Read and Watch HTML Tutorials', '{"blocks":[{"key":"5f2","text":"Complete the activities below, and submit a brief (two or three sentences is plenty) summary of something you learned:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3mf7s","text":"Read: HTML TutorialLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":6,"length":39,"style":"BOLD"}],"entityRanges":[{"offset":6,"length":39,"key":0}],"data":{}},{"key":"91m7t","text":"Watch: Scrimba Video Tutorial by Eric TiradoLinks to an external site.. (You can also interact with the live code on Scrimba)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":7,"length":63,"style":"BOLD"}],"entityRanges":[{"offset":7,"length":63,"key":1}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://ryanstutorials.net/html-tutorial/","rel":"noreferrer noopener","target":"_blank","url":"https://ryanstutorials.net/html-tutorial/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://scrimba.com/course/ghtml","rel":"noreferrer noopener","target":"_blank","url":"https://scrimba.com/course/ghtml"}}}} ', 1, null, 1, 4, null, null),
('Complete Making Webpages Exercises', '{"blocks":[{"key":"5f2","text":"Complete up through and including the Web development tools section:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":38,"length":21,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"slta","text":"Intro to HTML/CSS: Making webpages (Links to an external site.)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":63,"style":"BOLD"}],"entityRanges":[{"offset":0,"length":63,"key":0}],"data":{}},{"key":"19g6","text":"Submit screenshot(s) showing the completed sections:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eap9h","text":"Intro to HTML","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3thbv","text":"Intro to CSS","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"35p63","text":"More HTML Tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6uc76","text":"CSS Text Properties","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdki","text":"Web Development Tools","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.khanacademy.org/computing/computer-programming/html-css","rel":"noreferrer noopener","target":"_blank","url":"https://www.khanacademy.org/computing/computer-programming/html-css"}}}} ', 1, null, 1, 4, null, null),
('Read and Watch CSS Tutorials', '{"blocks":[{"key":"5f2","text":"Complete the activities below:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ao6q8","text":"Read: CSS TutorialLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":6,"length":38,"style":"BOLD"}],"entityRanges":[{"offset":6,"length":38,"key":0}],"data":{}},{"key":"6hqel","text":"Watch: Scrimba Video Tutorial By Eric TiradoLinks to an external site. (You can also interact with the live code on Scrimba)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":7,"length":63,"style":"BOLD"}],"entityRanges":[{"offset":7,"length":63,"key":1}],"data":{}},{"key":"1gie5","text":"Submit a brief (two or three sentences is plenty) summary of something you learned","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://ryanstutorials.net/css-tutorial/","rel":"noreferrer noopener","target":"_blank","url":"https://ryanstutorials.net/css-tutorial/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://scrimba.com/course/gintrotocss","rel":"noreferrer noopener","target":"_blank","url":"https://scrimba.com/course/gintrotocss"}}}}', 1, null, 1, 4, null, null),
('Complete CSS Grid Exercises', '{"blocks":[{"key":"5f2","text":"Complete the following tutorials on Codecademy:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ebhju","text":"Grid Essentials (Links to an external site.)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":44,"key":0}],"data":{}},{"key":"90a84","text":"Advanced Grid (Links to an external site.)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":42,"key":1}],"data":{}},{"key":"6u01e","text":"Submit screenshot(s) showing the completed sections. The lesson should list completion at 33%.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-intermediate-css/lessons/css-grid-essentials/exercises/introduction-to-grids","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-intermediate-css/lessons/css-grid-essentials/exercises/introduction-to-grids"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-intermediate-css/lessons/advanced-css-grid/exercises/grid-template-areas","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-intermediate-css/lessons/advanced-css-grid/exercises/grid-template-areas"}}}}', 1, null, 1, 4, null, null),
('Complete Javascript Exercises Part 1', '{"blocks":[{"key":"5f2","text":"JavaScript is the primary coding language you will be using at Alchemy, and beyond!","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"do7f9","text":"Please complete the following exercises. Each one will take approximately 1-2 hours, and at the end you will need to submit a screenshot showing that youve completed them.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"adote","text":"(Note: for the following tutorials on Codecademy, you do not need a PRO account.)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"},{"offset":1,"length":4,"style":"ITALIC"},{"offset":57,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"aha79","text":"Intro To JavaScriptLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":45,"key":0}],"data":{}},{"key":"7vfaa","text":"VariablesLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":35,"key":1}],"data":{}},{"key":"3e8kp","text":"Conditional StatementsLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":48,"key":2}],"data":{}},{"key":"874j7","text":"FunctionsLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":35,"key":3}],"data":{}},{"key":"904d2","text":"Example: Image will need to show completion for each one of the exercises above. On Codecademys syllabus page for this section, take a screenshot showing completion values as:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3ad50","text":"Introduction: 28%Variables: (will not be pictured. It is grouped with the Introduction lesson)\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9q2o8","text":"Conditionals: 25%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d4218","text":"Functions: 25%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/introduction-to-javascript/exercises/intro","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/introduction-to-javascript/exercises/intro"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/variables/exercises/intro-variables","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/variables/exercises/intro-variables"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/control-flow/exercises/control-flow-intro","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/control-flow/exercises/control-flow-intro"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/functions/exercises/intro-to-functions","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/functions/exercises/intro-to-functions"}}}}', 1, null, 1, 4, null, null),
('Complete Javascript Exercises Part 2', '{"blocks":[{"key":"5f2","text":"JavaScript is the primary coding language you will be using at Alchemy, and beyond!","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e6vke","text":"Please complete the following exercises. Each one will take approximately 1-2 hours, and at the end you will need to submit a screenshot showing that youve completed them.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ur87","text":"(Note: for the following tutorials on Codecademy, you do not need a PRO account.)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"},{"offset":1,"length":4,"style":"ITALIC"},{"offset":57,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"95aei","text":"(see image below for an example screenshot)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":43,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"1ontr","text":"ScopeLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":31,"key":0}],"data":{}},{"key":"d9frk","text":"ArraysLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":32,"key":1}],"data":{}},{"key":"jko3","text":"LoopsLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":31,"key":2}],"data":{}},{"key":"5d17b","text":"ObjectsLinks to an external site.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":33,"key":3}],"data":{}},{"key":"7f8aa","text":"Your screenshot will need to show 100% completion for each one of the exercises above through \"Objects\". (Please note you dont need to complete the lessons beyond \"objects\" in Codecademy as there are more lessons than necessary in this course. If you already completed Javascript Exercises Part 1, your screenshot will appear as below...)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":106,"length":232,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"bd5ml","text":"When finished, individual completion values should appear as:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a787u","text":"Scope - 33%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9cvad","text":"Arrays - 33%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ddg3f","text":"Loops - 33%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d4p6f","text":"Objects - 40%","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bo86h","text":"Example: Image of fully complete Javascript Exercises Part 1 & Part 2.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/scope/exercises/scope","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/scope/exercises/scope"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/arrays/exercises/arrays","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/arrays/exercises/arrays"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/loops/exercises/loops","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/loops/exercises/loops"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/objects","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/introduction-to-javascript/lessons/objects"}}}}', 1, null, 1, 4, null, null),
('Complete Javascript Classes Exercise', '{"blocks":[{"key":"5f2","text":"Complete the following tutorial on Codecademy:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fiudd","text":"Section 9: Classes (Links to an external site.)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":11,"length":36,"style":"BOLD"}],"entityRanges":[{"offset":11,"length":36,"key":0}],"data":{}},{"key":"4bes2","text":"Submit screenshot showing the completed section. It should be listed as 25% complete.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.codecademy.com/courses/learn-intermediate-javascript/lessons/classes/exercises/introduction","rel":"noreferrer noopener","target":"_blank","url":"https://www.codecademy.com/courses/learn-intermediate-javascript/lessons/classes/exercises/introduction"}}}}', 1, null, 1, 4, null, null),
('Read Document Object Model', '{"blocks":[{"key":"5f2","text":"Read: DOMLinks to an external site.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":6,"length":29,"style":"BOLD"}],"entityRanges":[{"offset":6,"length":29,"key":0}],"data":{}},{"key":"ske1","text":"Submit a brief (two or three sentences is plenty) summary of something you learned","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://javascript.info/document","rel":"noreferrer noopener","target":"_blank","url":"https://javascript.info/document"}}}} ', 1, null, 1, 4, null, null),
('Weekly Retrospective', '{"blocks":[{"key":"5nu90","text":"This assignment was locked Mar 14 at 9am.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3tqnb","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ec10o","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"am4go","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6serc","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6js5t","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3tnss","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4slpg","text":"What could you do to address these areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-03-11 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked Hide and Seek', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 2, '2022-03-08 09:00:00', 10, 4, 'https://github.com/alchemycodelab/half-baked-web-01-hide-seek', 'https://alchemycodelab.github.io/web-01-hide-and-seek/'),
('Deliverable: From Scratch Cup Game', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-03-09 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/shell-game-feb2022'),
('Spotlight Deliverable: TDD Challenges', '{"blocks":[{"key":"5nu90","text":"Make a repo based off this template repo. Write tests and get them passing.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1qmj9","text":"https://github.com/alchemycodelab/code-challenge-tdd\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":52,"key":0}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/code-challenge-tdd","rel":"noreferrer noopener","target":"_blank","url":"https://github.com/alchemycodelab/code-challenge-tdd"}}}} ', 2, '2022-03-11 09:00:00', 10, 4, 'https://github.com/alchemycodelab/code-challenge-tdd', ''),
('Deliverable: Half-Baked Character Designer', '{"blocks":[{"key":"5nu90","text":"Dropdown Character Maker","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7v5o8","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"pvgp","text":"Use a for/of loop to run a function against every item in an array (i.e., console.log , alert ).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4c8co","text":"In response to a user event, add a new item to a state array and display the new state to the user (i.e., add a new todo).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e949f","text":"Use the .value property to get the value of a grabbed HTML form input tag","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5hu9d","text":"Use .createElement() and .append() to display a new HTML tag (with .textContent ) to a grabbed DOM element on click.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fisr","text":"Use .createElement() and .append() to add a list of new DOM  elements to a grabbed DOM element on click","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2ftb0","text":"Create a select element to create a dropdown.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e9hct","text":"Use + and ${} to concatenate strings.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":4,"length":1,"style":"CODE"},{"offset":10,"length":3,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"ashsm","text":"Identify what variables are in a given scope/closure","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a37e","text":"Live Example:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c8lu2","text":"https://alchemycodelab.github.io/web-01-character-designer/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":59,"key":0}],"data":{}},{"key":"foh9c","text":"Getting Started","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3evjs","text":"User this repository as a template for this deliverable.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":5,"length":15,"key":1}],"data":{}},{"key":"727j9","text":"Events . . .Select from at least three dropdowns with at least three options each2On choosing an option from the dropdown and see the change reflected in the UI with a new image1On change, See all catchphrases rendered to the DOM2When submitting a catchphrase, add it to an array of catchphrases, clear the current DOMs list of catchphrases, and list all catchphrases in the DOM1See displayed how many times each dropdown has been changed in the current session1FunctionsIMPURE: displayStats() : mutates the DOM to display a string describing the counts.1IMPURE: displayCatchphrases() : clears out the old list from the DOM, loops through catchphrases, renders and appends to the list element2\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":12,"style":"BOLD"},{"offset":462,"length":9,"style":"BOLD"},{"offset":479,"length":75,"style":"CODE"},{"offset":563,"length":129,"style":"CODE"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-character-designer/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-character-designer/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/half-baked-web-01-character-designer","url":"https://github.com/alchemycodelab/half-baked-web-01-character-designer"}}}} ', 2, '2022-03-10 09:00:00', 10, 4, 'https://github.com/alchemycodelab/half-baked-web-01-character-designer', 'https://alchemycodelab.github.io/web-01-character-designer/'),
('Deliverable: From Scratch City Builder', '{"blocks":[{"key":"5nu90","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}} ', 2, '2022-03-11 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Exploring Your "Why"', '{"blocks":[{"key":"5nu90","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demoLearning Objectives","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":153,"length":19,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"721m3","text":"Students will be able to:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7ggt9","text":"Articulate what motivates them as software developers","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bbhgd","text":"Answer the question “Tell me about yourself” in a compelling way","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a7ivu","text":"Description","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2vl7q","text":"In this assignment, youll do some self-reflection to identify some reason why youre becoming a software developer. Taking the time to document what motivates can be helpful in a few ways. When youre struggling with motivation at any point in the program, you can look back at this assignment to remind yourself what youre working for.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5q6q9","text":"From a job seekers perspective, sharing what motivates you shows self-awareness and confidence and can help you stand out from other candidates by adding a more personal touch to your career story.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6fqu2","text":"Steps in the Activity","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":21,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"973an","text":"Do a quick brainstorm about what brings you here. Here are some ideas to consider:","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k6an","text":"Becoming a software developer to make more money is a valid reason for being here, but are there other intrinsic motivators driving you? Some examples include studying because the topic interests you, solving problems to benefit humanity, etc.","type":"ordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dfsq2","text":"What is the story you want to tell about yourself in the future?","type":"ordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"p0gd","text":"What type of work could you do to help you feel like youre living in integrity with yourself?","type":"ordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cki5q","text":"How do your values impact your choice to pursue this career path?","type":"ordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bdhao","text":"Are there certain things that youve heard throughout your life that youve integrated into your sense of self and motivate you to be at Alchemy?","type":"ordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8gf49","text":"List five reasons why you choose a career in software development and five reasons you are choosing Alchemy Code Lab to complete your training.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8566j","text":"From those ten reasons, narrow down your top one or two and be prepared to share those with your cohort.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9s5bl","text":"Acceptance Criteria","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":19,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bli1t","text":"To receive full credit, you must upload a document to Canvas with the reasons you chose software development and Alchemy Code Lab.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8eehb","text":"Due: March 9th at 9 AM","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9t3at","text":"Preparation/Resources","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":21,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"6q9oa","text":"Video:Why We Do What We Do (Links to an external site.)📷","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":6,"length":49,"key":0},{"offset":55,"length":1,"key":1}],"data":{}},{"key":"9qk7i","text":"Examples (Links to an external site.) of intrinsic motivation.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":37,"key":2}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.youtube.com/watch?v=sPBiJ9hIu6A","rel":"noreferrer noopener","target":"_blank","url":"https://www.youtube.com/watch?v=sPBiJ9hIu6A"}},"1":{"type":"IMAGE","mutability":"IMMUTABLE","data":{"src":"https://canvas.instructure.com/images/play_overlay.png"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.developgoodhabits.com/intrinsic-motivation-examples/","rel":"noreferrer noopener","target":"_blank","url":"https://www.developgoodhabits.com/intrinsic-motivation-examples/"}}}} ', 2, '2022-03-09 09:00:00', 20, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-03-18 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked Soccer Scorekeeper', '{"blocks":[{"key":"d3nhv","text":"Soccer Scorekeeper","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"95r0m","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tuls","text":"Model out examples of state that might be tracked using an array of objects","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ag7p2","text":"Use an object to create a data model for an item in the human world","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"33fcp","text":"Use the FormData constructor to grab multiple named values from an HTML form.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86f3g","text":"Use the submit handler with e.preventDefault() to manage form submissions.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"45vtj","text":"Use the type attribute on input tags to create email , number , password , and numerous other inputs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b50oo","text":"Create an object of primitive values and access any item in that object by key using dot and bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1sr8d","text":"Create an array of complex values (objects or arrays) and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"14u8l","text":"Describe the difference between val & ref","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"80m0v","text":"Identify what data types are passed by reference vs passed by value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ai4a2","text":"Write a render function that takes in an object (modeled after a real-world item) and returns a DOM element based on that item.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"be1cp","text":"Call a render function and append its return value to a grabbed element in the DOM","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"etmjd","text":"Use a for/of loop to loop through an array and for each item, append an element to the DOM using a render function","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"11vu","text":"Create modular code using import and export with named exports.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1vhkr","text":"Update multiple pieces of numerical state, each of which can be incremented or decremented on click (i.e, times clicked for multiple buttons).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"91jet","text":"Buggy Soccer Scorekeeper","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":24,"key":0}],"data":{}},{"key":"7gd15","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2em1v","text":"https://alchemycodelab.github.io/web-01-soccer-scorekeeper/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":59,"key":1}],"data":{}},{"key":"40nkm","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1EventsOn load, see a form and empty current game div1On clicking the add names button, add the team names to the current game div. Call displayCurrentGameEl to do this DOM work1On clicking add or subtract, increment and decrement the correct score in the current game div. Call displayCurrentGameEl to do this DOM work1On clicking finish, empty the current game div and add the current game to the \"past games\" div. All past games should be visible in this div. Call displayAllGames to do this DOM work.2FunctionsIMPURE: displayCurrentGameEl()2IMPURE: displayAllGames() : clears out and appends to games div2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":256,"length":20,"style":"CODE"},{"offset":398,"length":20,"style":"CODE"},{"offset":587,"length":15,"style":"CODE"},{"offset":641,"length":22,"style":"CODE"},{"offset":672,"length":17,"style":"CODE"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-soccer-scorekeeper","url":"https://github.com/alchemycodelab/buggy-js-soccer-scorekeeper"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-soccer-scorekeeper/","url":"https://alchemycodelab.github.io/web-01-soccer-scorekeeper/"}}}}', 2, '2022-03-15 09:00:00', 10, 4, 'https://github.com/alchemycodelab/bug-hunt-web-01-soccer-scorekeeper', 'https://alchemycodelab.github.io/web-01-soccer-scorekeeper/'),
('Deliverable: From Scratch Poll Maker', '{"blocks":[{"key":"d3nhv","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo2EventsOn load, see a form and empty current poll div2On submit, add the poll options and question to the current poll div2On clicking add or subtract, increment and decrement the correct poll votes in the current poll div2On clicking finish, empty the current poll div and add the current poll to the \"past polls\" div. All past polls should be visible in this div by looping through and calling renderPoll with each poll.4FunctionsIMPURE: displayCurrentPoll() : mutates DOM to display current state of current poll2IMPURE: displayAllPolls() : clears out DOM and appends to poll div using current state of past polls3PURE: renderPoll(poll) : returns DOM node3","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":120,"length":6,"style":"BOLD"},{"offset":542,"length":9,"style":"BOLD"},{"offset":515,"length":10,"style":"CODE"},{"offset":559,"length":20,"style":"CODE"},{"offset":643,"length":17,"style":"CODE"},{"offset":742,"length":16,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"foje7","text":"Stretch goal ideas","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d66ch","text":"Add a dropdown to let the user select how many \"options\" the poll should have. For example, \"What is your favorite color?\" might have \"red\", \"orange\", or \"green\".","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fn4oh","text":"Allow the user to click on and delete past polls","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4cavq","text":"Allow the user to go back and update past polls using the UX of your choice.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ff62q","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7r8ep","text":"6 buttons","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eb89g","text":"option A add buttonWhy? 💥💥💥 Add event listener to increment the vote count for option A in the current poll\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1rvkb","text":"option B add buttonWhy? 💥💥💥 Add event listener to increment the vote count for option B in the current poll\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ssrh","text":"option A subtract/undo buttonWhy? 💥💥💥 Add event listener to decrement the vote count for option A in the current poll\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9bisb","text":"option B subtract/undo buttonsWhy? 💥💥💥 Add event listener to decrement the vote count for option B in the current poll\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"88fie","text":"create poll formWhy? Add submit listener to (not a click listener) to the form itself!\n\nthree inputs (question, option 1, option 2)Why? Figure out the users question and options\nWhy? 💥💥💥 On submit, update the current poll question and options, and reflect that in the DOM\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"euorv","text":"1 close poll button\nWhy?💥💥💥\nAppend the current poll to the past polls state []\n\n\"Update the list\"clear DOM of the list\nUse a for loop to loop through all past polls, create some DOM and display each past poll in the list\nClear out/reset current poll state and DOM.\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cja5l","text":"current poll sectionWhy? a bunch of empty divs that we will inject state into (question, options, and vote totals)\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8th5n","text":"empty div for closed polls history/list (for appending to)Why? A place to put the histry\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-03-17 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/poll-tracker-supabase-feb2022'),
('Spotlight Deliverable: Import and Display a List Practice', '{"blocks":[{"key":"d3nhv","text":"The goal here is to help you see web development the way experienced developers do: as a series of finite and repeatable tasks.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"62ses","text":"There are only so many things we do in an app.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"33uol","text":"Here is a list of the 10 major plain JavaScript patterns. (Links to an external site.)","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":86,"key":0}],"data":{}},{"key":"f72jj","text":"Lets practice the display a list and render function patterns.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bf3t6","text":"Scoring rubric: 2.5 point for each array displayed to the page.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":63,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2kbag","text":"Goal: render 4 separate lists of things to the same index.html file. Minimally,one list should be a list of strings,\none should be a list of simple objects,\none should be a list of objects where one property is a nested object,\nand one should be a list of objects where one property is an array.\nA a stretch goal, feel free to make all of them arrays of deep objects (with array and nested object properties).\n","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5v8tf","text":"Start with the list practice template repo (Links to an external site.).","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":15,"length":56,"key":1}],"data":{}},{"key":"4jrd2","text":"Repeat the following process 4 times, with 4 different domains, all in the same template:Come up with a domain for this data (lie dogs or candies). Lets assume you picked candies.\nRename array-one.js to candies-data.js or whatever. In that data file, create an array of at least 3 objects for that domain (each object should have at least 3 properties). The objects in the array should all have the same properties.\nRename render-one.js to render-candy.js file for your candy array. For your array of objects, write a simple render function that accepts one object and returns a DOM elements. This function should return at minimum a div with two p tags. The outer div should have a css class of candy-item.\nThen, in app.js import your array and render function and grab a container element from the DOM.\nLoops through your array, and for each object, render and appends a styled candy element to the container element you grabbed from the DOM.\nNote: do this process one array at a time. Do not write 4 arrays, then 4 render functions, etc. Please work through the first array, then the first render function, then the first display function.\n","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":967,"length":19,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/module-one-curriculum-base/blob/main/PATTERNS.md","rel":"noreferrer noopener","target":"_blank","url":"https://github.com/alchemycodelab/module-one-curriculum-base/blob/main/PATTERNS.md"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/display-a-list-practice","rel":"noreferrer noopener","target":"_blank","url":"https://github.com/alchemycodelab/display-a-list-practice"}}}}', 2, '2022-03-16 09:00:00', 10, 4, 'https://github.com/alchemycodelab/display-a-list-practice', ''),
('Deliverable: Half-Baked Mushroom Festival', '{"blocks":[{"key":"d3nhv","text":"Mushroom Festival","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cj9r6","text":"Use this template to get started.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":4,"length":13,"key":0}],"data":{}},{"key":"eeab5","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dtr2","text":"In response to a user event, mutate a single object in a state array and display the new state to the user (i.e., complete a todo).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2k5uh","text":"Describe the difference between a pure and impure function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2rs30","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"qjc6","text":"https://alchemycodelab.github.io/web-01-mushroom-festival/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":58,"key":1}],"data":{}},{"key":"dpn75","text":"Acceptance Criteria","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8dflk","text":"User should see some mushrooms and default friends on load","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"daa8n","text":"Click on the invite button to create a new (unsatisfied) friend (with a random default name if none is provided) and add them to the page","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bvt1f","text":"The number of mushrooms should be visible on the table and should update when mushroom state changes.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dd0p7","text":"Clicking the forage button should launch an alert telling the user if they found a mushroom. 50% of the time, the user should succeed.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7bres","text":"On clicking a friend, a mushroom should vanish from the table, and the friend should become more satisfied. Satisfaction level should be visible to the user as different emojis","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1bbv1","text":"On clicking a friend, if that friend is completely satisfied, they can eat no more mushrooms. Also, if you try to feed a friend and there are no mushrooms, user should get an alert telling them to go forage for another mushroom.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1q7q6","text":"Mushroom Festival","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"81q3p","text":"User should be able to . . .Visit the deployed pages on Netlify, with link in the About section of the Github repo1EventsOn load, see some mushrooms and default friends on the page1The number of mushrooms should be visible on the table and should update when mushroom state changes.1On clicking the forage button, launch an alert telling the user if they found a mushroom. 50% of the time, the user should succeed.2On clicking a friend, a mushroom should vanish from the table, and the friend should become more satisfied. Satisfaction level should be visible to the user as different emojis2On clicking a friend, if that friend is completely satisfied, they can eat no more mushrooms. Also, if you try to feed a friend and there are no mushrooms, user should get an alert telling them to go forage for another mushroom.1Click on the invite button to create a new (unsatisfied) friend (with a random default name if none is provided) and add them to the page2","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ost3","text":"Stretch goal ideas","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4gibv","text":"Its so easy to imagine new features for games.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aaii9","text":"What if there were not just mushrooms, but also delicious berries?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3vi55","text":"What if you could invite friends AND animals to the festival?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5382m","text":"What if some friends or animals dont like berries, burt only like mushrooms and vice versa? And if you feed somebody a berry to somebody who doesnt like berries, they get less happy","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3kkpr","text":"What if friends had favorite animals (i.e., a pet)? And when that animal gets happier, the friend gets happier, and vice versa?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":20,"length":16,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"f7lsj","text":"What if there were three trees in the forest, and you clicked on one to figure out where a mushroom is (like hide and seek from day 1?)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9tr1o","text":"What if some mushrooms were poison and render differently? And you could only feed them to animals who are resistant to that poison?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"h5rc","text":"etc etc etc","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/half-baked-web-01-mushroom-festival","url":"https://github.com/alchemycodelab/half-baked-web-01-mushroom-festival"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-mushroom-festival/","url":"https://alchemycodelab.github.io/web-01-mushroom-festival/"}}}}', 2, '2022-03-17 09:00:00', 10, 4, 'https://github.com/alchemycodelab/half-baked-web-01-mushroom-festival', 'https://alchemycodelab.github.io/web-01-mushroom-festival/'),
('Deliverable: From Scratch Goblin Fighter', '{"blocks":[{"key":"d3nhv","text":"Demo","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5bq8j","text":"Link to Demo","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":12,"key":0}],"data":{}},{"key":"e2u5f","text":"Getting Started","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6h5ul","text":"Use this template to get started.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":4,"length":13,"key":1}],"data":{}},{"key":"bpcvk","text":"Learning Objectives","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3d5fn","text":"Add event listeners to DOM elements as part of a loop","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e05f2","text":"Description","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cup40","text":"In this deliverable, we will be creating a Goblin game. This deliverable will challenge you to maintain game state and have your render function render different content depending on that state.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1oq94","text":"Acceptance Criteria","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5fllj","text":"On load, see the HP and names of at least two default goblins","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7e0n2","text":"On submitting the challenge goblin form, add a new goblin object (with 3 HP and a name) to state and display it to the DOM","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"63q5i","text":"On clicking a goblin, it should tell the user whether they hit the goblin or not, then update state and DOM appropriately with new HP","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"97cab","text":"On clicking a goblin, it should tell the user whether the goblin hit the player or not, then update state and DOM appropriately with new HP","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"948ha","text":"The number of vanquished goblins should be visible when state changes.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"butgn","text":"Render dead goblins differently, and disable clicking on them","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"da5fr","text":"When the users HP is 0, launch a game over message","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"69pt2","text":"Rubric","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"tsst","text":"TaskPoints** Deploy Requirements **Main branch deployed to Netlify1Open PR from dev branch with Netlify deploy preview1** Acceptance Requirements **Users see HP and two default goblins2Users can add a new goblin with default HP and name2Goblin click handler6- Uses Math.random() function to determine hits- Alerts user whether they hit the goblin or not and updates HP- Alerts user whether the goblin hit them or not and updates HPShow number of vanquished goblins1Display goblins differently and disable clicking when defeated1Disable all functionality when the game is over2FunctionsPURE: renderGoblin(goblin) : return DOM node`2IMPURE: displayGoblins() : clears DOM and appends goblin data to goblin list DOM node`2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":10,"style":"BOLD"},{"offset":576,"length":9,"style":"BOLD"},{"offset":80,"length":3,"style":"CODE"},{"offset":591,"length":20,"style":"CODE"},{"offset":639,"length":16,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2qgg4","text":"Stretch goal ideas","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5cpsi","text":"Change the player image to something stronger-looking every time they hit a new threshold (killed first goblin, killed three goblins, etc).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fmuhl","text":"Change the player image based on their current health to show how worse-for-the-wear theyve become.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"266v5","text":"Give goblins a random strength property that determines how much damage they do to the player.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ori3","text":"Give goblins a random agility property that determines how often the play can hit them.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1sguk","text":"Give goblins a random dexterity property that determines how often they hit the player.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2u1k8","text":"Give the player a strength property starting at 1 that determines how much damage they do to goblins. Every time a goblin dies, increment this property.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7432a","text":"Add different kinds of monsters and render them differently by adding a type property to the monster.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemy-web-goblin-fighter.netlify.app/","rel":"nofollow","url":"https://alchemy-web-goblin-fighter.netlify.app/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/web-template","url":"https://github.com/alchemycodelab/web-template"}}}}', 2, '2022-03-18 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/goblin-fighter-feb-2022'),
('Spotlight Deliverable: Supabase Workshop', '{"blocks":[{"key":"d3nhv","text":"Answer the following questions:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"73bsc","text":"1) Why is supabase useful? Describe an app that might use supabase, and how it would use supabase.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fiv1l","text":"2) The back end is a weird concept! I imagine you still have lots of questions, so I wonder: after this workshop, what is still confusing or mysterious to you about supabase?","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"gc1","text":"3) Upload screenshots of the following:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29nb9","text":"three different tables with a minimum of four custom columns each. At least two of your tables should have at least one array data type.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d2ujh","text":"the anonymous key and URL for this supabase project","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2i53b","text":"the page that shows the RLS policies for your tables","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}} ', 2, '2022-03-18 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-03-25 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked Adopt-A-Dog List/Detail (Supabase)', '{"blocks":[{"key":"d3nhv","text":"Answer the following questions:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"73bsc","text":"1) Why is supabase useful? Describe an app that might use supabase, and how it would use supabase.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fiv1l","text":"2) The back end is a weird concept! I imagine you still have lots of questions, so I wonder: after this workshop, what is still confusing or mysterious to you about supabase?","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"gc1","text":"3) Upload screenshots of the following:Supabase Dog Adoption App","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bno9","text":"Use this template for this deliverable.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":4,"length":13,"key":0}],"data":{}},{"key":"8gopr","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"s4vq","text":"Draw a simple architecture diagram describing the relationship between a users computer and a single RESTful API.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d3sjg","text":"On load, use fetch and .then to hit a GET endpoint, get all items, and set state and update the view using the response.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eclmk","text":"In front end apps with asynchronous behavior, use the network tab to examine (and debug) the request being sent to a server and the response received from a server.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"df7gb","text":"Here is the model for the dogs table","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":26,"length":4,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"3cen4","text":"📷","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":1}],"data":{}},{"key":"2qdqp","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"l07o","text":"https://alchemycodelab.github.io/web-01-adopt-a-dog/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":52,"key":2}],"data":{}},{"key":"b1hbr","text":"Description","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dfphg","text":"For this deliverable you have been given a supabase database and some render functions. Your job is to add the code in fetch-utils.js, app.js and detail.js to render the list of animals and the details page.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":119,"length":14,"style":"CODE"},{"offset":135,"length":6,"style":"CODE"},{"offset":146,"length":9,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"b8ugd","text":"TaskPointsDeploy RequirementsMain branch deployed to Netlify1Open PR from dev branch with Netlify deploy preview1Code RequirementsASYNC: getDogs() : return array of dogs from supabase2On load on the home page, see a list of dogs (names and breed image), fetched from supabase1On clicking a dog, user should be taken to that dogs detail page.1ASYNC: getDog(id) : return single dog from supabase2Detail page should get the id from the URL and use that id to fetch that dog from supabase.1Detail page should show the user details about the dog (including age, breed, and description)1","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":10,"length":19,"style":"BOLD"},{"offset":113,"length":17,"style":"BOLD"},{"offset":74,"length":3,"style":"CODE"},{"offset":137,"length":9,"style":"CODE"},{"offset":349,"length":10,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"29nb9","text":"three different tables with a minimum of four custom columns each. At least two of your tables should have at least one array data type.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d2ujh","text":"the anonymous key and URL for this supabase project","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2i53b","text":"the page that shows the RLS policies for your tables","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/half-baked-web-01-adopt-a-dog","url":"https://github.com/alchemycodelab/half-baked-web-01-adopt-a-dog"}},"1":{"type":"IMAGE","mutability":"IMMUTABLE","data":{"src":"https://markdown-url-viewer.s3.eu-west-3.amazonaws.com/dogs-model.png"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-adopt-a-dog/","url":"https://alchemycodelab.github.io/web-01-adopt-a-dog/"}}}}', 2, '2022-03-22 09:00:00', 10, 4, 'https://github.com/alchemycodelab/half-baked-web-01-adopt-a-dog', 'https://alchemycodelab.github.io/web-01-adopt-a-dog/'),
('Deliverable: From Scratch Beanie Baby List/Detail (Supabase)', '{"blocks":[{"key":"d3nhv","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo2EventsOn load on the home page, see a list of <thing>s, fetched from supabase4On clicking a <thing>, user should be taken to that <thing>s detail page.2Detail page should get the id from the URL and use that id to fetch that <thing> from supabase.2Detail page should show the user details about the <thing> with more details than on the list page2FunctionsPURE: render<Thing>Card(dog) : return DOM node2PURE: render<ThingDetail(dog) : return DOM node2ASYNC: fetch<Things>() : return array of <thing>s from supabase2ASYNC: fetch<Thing>(id) : return single <thing> from supabase2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":166,"length":7,"style":"CODE"},{"offset":212,"length":7,"style":"CODE"},{"offset":250,"length":7,"style":"CODE"},{"offset":345,"length":7,"style":"CODE"},{"offset":419,"length":7,"style":"CODE"},{"offset":482,"length":22,"style":"CODE"},{"offset":529,"length":23,"style":"CODE"},{"offset":578,"length":15,"style":"CODE"},{"offset":612,"length":7,"style":"CODE"},{"offset":642,"length":16,"style":"CODE"},{"offset":675,"length":7,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"cggck","text":"Stretch goal ideas","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5f51f","text":"Sort <thing>s by their name.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":7,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"adsa2","text":"Add an input that lets the user filter <thing>s on the list page.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":39,"length":7,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"d2tb","text":"Add additional UI that lets the user sort <thing>s on the list page by different properties.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":42,"length":7,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"9bd7c","text":"For practice, make a second supabase table with another <thing> and add a second list to the list page. If you did <candies>, now do <candy-shops>, for example. Then, make a separate detail page for just that <thing>. Keep all the features from the original app as well.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":56,"length":7,"style":"CODE"},{"offset":209,"length":7,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"62ern","text":"If youre feeling ambitious, see if you can get it working so that when you click on an item, it deletes from supabase then re-renders the list","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6vf8n","text":"If youre feeling EVEN MORE ambitious, see if you can figure out how to let users create a <thing> in supabase and render it to the page.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":90,"length":7,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"71vb8","text":"If you are mega-ultra final-form ambitious: see if you can figure out letting a user update a thing from the detail page.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b2kpp","text":"HTML Setup","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a8h86","text":"List page","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2jj6","text":"divs to hold the single plantseach plant should be a link to its detail page (anchor tag)\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6fmm3","text":"big div to hold the list of all plants","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8mqkj","text":"Events","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"358c9","text":"on loadget plants from the database\ndisplay those plants (loop, render, and append)\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e27lu","text":"Detail page","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d4vh4","text":"div to hold the plant details","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r3q8","text":"Events","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7jtkh","text":"on loadfigure out which plant to go fetch . . .\nget THIS SINGLE plant from the database\ndisplay THIS SIGNLE plant (render, and append)\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9s9pt","text":"Step Zero:","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"199bn","text":"Make a supabase table with a few rows based on the <thing> of your choosing :)","type":"header-two","depth":0,"inlineStyleRanges":[{"offset":51,"length":7,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"b0ekg","text":"<thing>s should have at least 4 properties.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"CODE"}],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-03-23 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/list-detail-beanie-babies-feb2022'),
('Spotlight Deliverable: Async Load and Display a List Practice', '{"blocks":[{"key":"d3nhv","text":"The goal here is to help you see web development the way experienced developers do: as a series of finite and repeatable tasks.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3njd3","text":"There are only so many things we do in an app.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fhg6v","text":"Here is a list of the 10 major plain JavaScript patterns. (Links to an external site.)","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":86,"key":0}],"data":{}},{"key":"cmalo","text":"Lets practice the display a list and render function patterns using data fetched with the `async fetch on load` pattern.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bhalf","text":"Grading Rubric: 2.5 points per array of items displayed on the site.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":68,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f9afl","text":"Goal: asynchronously fetch and render 4 separate lists of things to the same index.html file.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"905k1","text":"Start with the alchemy web template (Links to an external site.). Dont forget to add the supabase CDN to index.html and make a fetch-utils.js with some good copy paste work to set up the supabase client with the KEY and URL.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":15,"length":49,"key":1}],"data":{}},{"key":"9upa3","text":"Repeat the following process 4 times, with 4 different domains, all in the same template:Come up with a domain for this data (like dogs or candies). Lets assume you picked candies.\nIn the supabase.io app, create a candies table, Your table should have at least 4 columns.\nIn the supabase.io app, create at least three rows in your table.\nIn your app, in a separate file, write a render function for your domain. Your function should accept one object and returns a DOM element. This function should return at minimum a div with two p tags. The outer div should have a css class of candy-item.\nAdd a fetch function called getCandies() to your fetch-utils.js file to fetch all candies asynchronously.\n\nThen, in app.js use window.addEvenListener(load, () => {}) to fetch and display your data from supabase.In your load event listener, first fetch the data.\nThen, loop through the fetched array array, and for each object, render and appends a styled candy element to the container element you grabbed from the DOM.\nMove this fetch, render, and append into its own fetchAndDisplayCandies() function to make it more readable. After all, well be doing this for 4 different tables and that could get messy if we didnt abstract this work into functions.\nNote: do this process one domain table at a time. Do not write 4 domain tables, then 4 render functions, etc. Please work through the first domain table, then the first render function, then the first display function.\n","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":1269,"length":26,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/module-one-curriculum-base/blob/main/PATTERNS.md","rel":"noreferrer noopener","target":"_blank","url":"https://github.com/alchemycodelab/module-one-curriculum-base/blob/main/PATTERNS.md"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/web-template","rel":"noreferrer noopener","target":"_blank","url":"https://github.com/alchemycodelab/web-template"}}}}', 2, '2022-03-23 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', ''),
('Deliverable: Half-Baked Soccer Scorekeeper (Supabase)', '{"blocks":[{"key":"d3nhv","text":"Supabase Soccer Scorekeeper","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eb2ik","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fj7g3","text":"Create an object containing complex values (objects or arrays) and access any item in that complex object using dot and bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cj85h","text":"Display errors to users with an alert inside a .catch block","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"11gem","text":"In response to a user event, make a fetch call add a new object to the database and display the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cs5ti","text":"Buggy Supabase Soccer Scorekeeper","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":33,"key":0}],"data":{}},{"key":"277pl","text":"Here is the model for the games table","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":26,"length":5,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"fpfom","text":"📷","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":1}],"data":{}},{"key":"87cha","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"19o88","text":"https://alchemycodelab.github.io/web-01-soccer-scorekeeper-supabase/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":68,"key":2}],"data":{}},{"key":"2e3kl","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo.5Events `On the home page (/), Login and Signup using the login and signup form. On success, redirect to the /games page.5Logout by clicking the logout button.5If a non-logged-in user tries to visit the games page, redirect them to the login page.5On the games page load, see a form and empty current game div1On the games page load, fetch all past games and render them to the past games div1On submit, add the team names to the current game div.5On clicking add or subtract, increment and decrement the correct score in the current game div.5On clicking finish, empty the current game div, and use supabase to add the current game to the database.1On clicking finish, clear the past games div, then fetch all past games from supabase and render them in the past games div.1FunctionsIMPURE: displayCurrentGameEl() : displays the form state to the current game DOM element.5IMPURE: displayAllGames() : clears out and appends to games div.5PURE (stretch: with TDD): renderGame(game) : returns DOM node.5PURE (stretch: with TDD): renderTeam(name, score) : return DOM node.5ASYNC: createGame(game) : creates a game for currently logged in user in supabase.5ASYNC: getGames() : returns games for currently logged in user from supabase.5\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":147,"length":1,"style":"CODE"},{"offset":229,"length":6,"style":"CODE"},{"offset":912,"length":22,"style":"CODE"},{"offset":1002,"length":17,"style":"CODE"},{"offset":1085,"length":16,"style":"CODE"},{"offset":1148,"length":23,"style":"CODE"},{"offset":1198,"length":16,"style":"CODE"},{"offset":1281,"length":10,"style":"CODE"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-soccer-scorekeeper-supabase","url":"https://github.com/alchemycodelab/buggy-js-soccer-scorekeeper-supabase"}},"1":{"type":"IMAGE","mutability":"IMMUTABLE","data":{"src":"https://markdown-url-viewer.s3.eu-west-3.amazonaws.com/games-model.png"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-soccer-scorekeeper-supabase/","url":"https://alchemycodelab.github.io/web-01-soccer-scorekeeper-supabase/"}}}} ', 2, '2022-03-24 09:00:00', 10, 4, 'https://github.com/alchemycodelab/bug-hunt-web-01-soccer-scorekeeper-supabase', 'https://alchemycodelab.github.io/web-01-soccer-scorekeeper-supabase/'),
('Deliverable: From Scratch Poll Maker (Supabase)', '{"blocks":[{"key":"d3nhv","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo2EventsOn load, see a form and empty current poll div2On submit, add the poll options and question to the current poll div2On clicking add or subtract, increment and decrement the correct poll votes in the current poll div2On clicking finish, empty the current poll div and add the current poll to the \"past polls\" div. All past polls should be visible in this div by looping through and calling renderPoll with each poll.4FunctionsIMPURE: displayCurrentPoll() : mutates DOM to display current state of current poll2IMPURE: displayAllPolls() : clears out DOM and appends to poll div using current state of past polls3PURE: renderPoll(poll) : returns DOM node3","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":120,"length":6,"style":"BOLD"},{"offset":542,"length":9,"style":"BOLD"},{"offset":515,"length":10,"style":"CODE"},{"offset":559,"length":20,"style":"CODE"},{"offset":643,"length":17,"style":"CODE"},{"offset":742,"length":16,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"foje7","text":"Stretch goal ideas","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d66ch","text":"Add a dropdown to let the user select how many \"options\" the poll should have. For example, \"What is your favorite color?\" might have \"red\", \"orange\", or \"green\".","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fn4oh","text":"Allow the user to click on and delete past polls","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4cavq","text":"Allow the user to go back and update past polls using the UX of your choice.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ff62q","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7r8ep","text":"6 buttons","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eb89g","text":"option A add buttonWhy? 💥💥💥 Add event listener to increment the vote count for option A in the current poll\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1rvkb","text":"option B add buttonWhy? 💥💥💥 Add event listener to increment the vote count for option B in the current poll\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ssrh","text":"option A subtract/undo buttonWhy? 💥💥💥 Add event listener to decrement the vote count for option A in the current poll\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9bisb","text":"option B subtract/undo buttonsWhy? 💥💥💥 Add event listener to decrement the vote count for option B in the current poll\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"88fie","text":"create poll formWhy? Add submit listener to (not a click listener) to the form itself!\n\nthree inputs (question, option 1, option 2)Why? Figure out the users question and options\nWhy? 💥💥💥 On submit, update the current poll question and options, and reflect that in the DOM\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"euorv","text":"1 close poll button\nWhy?💥💥💥\nAppend the current poll to the past polls state []\n\n\"Update the list\"clear DOM of the list\nUse a for loop to loop through all past polls, create some DOM and display each past poll in the list\nClear out/reset current poll state and DOM.\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cja5l","text":"current poll sectionWhy? a bunch of empty divs that we will inject state into (question, options, and vote totals)\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8th5n","text":"empty div for closed polls history/list (for appending to)Why? A place to put the histry\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-03-25 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/poll-tracker-supabase-feb2022'),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-01 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked Todo App (Supabase)', '{"blocks":[{"key":"d3nhv","text":"Supabase Todo App","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7jqg6","text":"Live Example:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"be0i","text":"https://alchemycodelab.github.io/web-01-todo-supabase/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":0}],"data":{}},{"key":"7ug46","text":"Getting Started","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c0qiv","text":"Use this template to get started.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":4,"length":13,"key":1}],"data":{}},{"key":"bo7h2","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5kbmc","text":"Perform CRUD actions on user data in supabase","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fta3u","text":"Description","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"81tqm","text":"Here is the schema for the todos table:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":27,"length":5,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"8ljsg","text":"📷","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":2}],"data":{}},{"key":"fb9gl","text":"You will be creating a to do list using Supabase. Users should only be able to perform operations on todos associated with their user. You will be using an existing supabase database for this deliverable. Authentication has already been provided for you.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aehnj","text":"Acceptance Criteria","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8dt0b","text":"Users should be able to add a to do item to their list","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"j5ks","text":"Users should be able to \"complete\" items on their to do list","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aib1","text":"Users should be able to delete all of their todos","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2ib6o","text":"TaskPointsDeploy RequirementsMain branch deployed to Netlify0Open PR from dev branch with Netlify deploy preview0Code RequirmentsUsers see a list of all their todos2.5Users can add todos to the database2.5Users can complete todos2.5Users can delete all todos2.5\n","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":10,"length":19,"style":"BOLD"},{"offset":113,"length":16,"style":"BOLD"},{"offset":74,"length":3,"style":"CODE"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-todo-supabase/","url":"https://alchemycodelab.github.io/web-01-todo-supabase/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/half-baked-web-01-todo-supabase","url":"https://github.com/alchemycodelab/half-baked-web-01-todo-supabase"}},"2":{"type":"IMAGE","mutability":"IMMUTABLE","data":{"src":"https://markdown-url-viewer.s3.eu-west-3.amazonaws.com/todos-model.png"}}}} ', 2, '2022-04-01 09:00:00', 10, 4, 'https://github.com/alchemycodelab/half-baked-web-01-todo-supabase', 'https://alchemycodelab.github.io/web-01-todo-supabase/'),
('Deliverable: From Scratch Shopping List (Supabase)', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-03-30 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/shopping-list-feb2022'),
('Spotlight: LinkedIn + Alumni Coffee Date', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-03 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked Fuzzy Bunny Organizer (Supabase)', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-04 09:00:00', 10, 4, '', ''),
('Deliverable: From Scratch Workshop Organizer (Supabase)', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-05 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', ''),
('Spotlight Deliverable: Filter and Munge Chart Challenge', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-06 09:00:00', 20, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-07 09:00:00', 5, 4, '', ''),
('Deliverable: Social Media Group Project', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-08 09:00:00', 5, 4, '', ''),
('STRETCH Spotlight Deliverable: Realtime Supabase', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-09 09:00:00', 5, 4, '', ''),
('Spotlight Deliverable: Chart Munge', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-10 09:00:00', 5, 4, '', ''),
('Spotlight Deliverable: Miro Project Planning', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-11 09:00:00', 5, 4, '', ''),
('Sprint Week Project Submission', '{"blocks":[{"key":"d3nhv","text":"We will add a link here to template repo and iframe to the acceptance criteria README.md once weve generated them as a class as part of the planning demo.\n","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 2, '2022-04-12 09:00:00', 5, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-04-29 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked React Zodiac', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 3, '2022-04-26 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Animal Farm', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-04-27 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Tech Resume Outline (Due 4/29 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-04-28 09:00:00', 10, 4, '', ''),
('Deliverable: Half-Baked Busy Town', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 3, '2022-04-29 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Busy Zoo', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-04-30 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Import and Display a List Practice, React-style!', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-01 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-02 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked City Postcard Builder', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 3, '2022-05-03 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Fast-Food Order App', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-04 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Personal Presentations (Due 5/9 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-05 09:00:00', 10, 4, '', ''),
('Deliverable: Half-Baked Goblin Builder', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 3, '2022-05-06 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Movie List Maker', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-07 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Async Fetch and Display a List Practice, React-style!', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-08 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-09 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked Beanie-Baby List/Detail', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 3, '2022-05-10 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Your List/Detail', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-11 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Making Network Connections (Due 5/13 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-12 09:00:00', 20, 4, '', ''),
('Deliverable: Half-Baked Board Game Inventory', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 3, '2022-05-13 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Your Inventory', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-14 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: React Class Components Refactor', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-15 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-16 09:00:00', 5, 4, '', ''),
('Deliverable: From Scratch Pokedex Proxy', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-17 09:00:00', 20, 4, '', ''),
('Deliverable: Half-Baked Yelp Proxy', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-18 09:00:00', 10, 4, '', ''),
('Spotlight Deliverable: Answering "Tell Me About Yourself" (Due 5/18 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-19 09:00:00', 10, 4, '', ''),
('Deliverable: From Scratch React Libraries and Testing', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-20 09:00:00', 20, 4, '', ''),
('Spotlight Deliverable: Customer Munge', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-21 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-22 09:00:00', 5, 4, '', ''),
('Deliverable: From Scratch Movie Watchlist Group Project', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-23 09:00:00', 20, 4, '', ''),
('Spotlight Deliverable: STAR Interview Method (Due 5/25 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-24 09:00:00', 10, 4, '', ''),
('STRETCH Spotlight Deliverable: React Context', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-25 09:00:00', 10, 4, '', ''),
('Team Assessment Project', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 3, '2022-05-26 09:00:00', 150, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-04-29 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked React Zodiac', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 4, '2022-04-26 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Animal Farm', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-04-27 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Tech Resume Outline (Due 4/29 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-04-28 09:00:00', 10, 4, '', ''),
('Deliverable: Half-Baked Busy Town', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 4, '2022-04-29 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Busy Zoo', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-04-30 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Import and Display a List Practice, React-style!', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-01 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-02 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked City Postcard Builder', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 4, '2022-05-03 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Fast-Food Order App', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-04 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Personal Presentations (Due 5/9 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-05 09:00:00', 10, 4, '', ''),
('Deliverable: Half-Baked Goblin Builder', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 4, '2022-05-06 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Movie List Maker', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-07 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Async Fetch and Display a List Practice, React-style!', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-08 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-09 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked Beanie-Baby List/Detail', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 4, '2022-05-10 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Your List/Detail', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-11 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Making Network Connections (Due 5/13 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-12 09:00:00', 20, 4, '', ''),
('Deliverable: Half-Baked Board Game Inventory', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 4, '2022-05-13 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Your Inventory', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-14 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: React Class Components Refactor', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-15 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-16 09:00:00', 5, 4, '', ''),
('Deliverable: From Scratch Pokedex Proxy', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-17 09:00:00', 20, 4, '', ''),
('Deliverable: Half-Baked Yelp Proxy', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-18 09:00:00', 10, 4, '', ''),
('Spotlight Deliverable: Answering "Tell Me About Yourself" (Due 5/18 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-19 09:00:00', 10, 4, '', ''),
('Deliverable: From Scratch React Libraries and Testing', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-20 09:00:00', 20, 4, '', ''),
('Spotlight Deliverable: Customer Munge', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-21 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-22 09:00:00', 5, 4, '', ''),
('Deliverable: From Scratch Movie Watchlist Group Project', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-23 09:00:00', 20, 4, '', ''),
('Spotlight Deliverable: STAR Interview Method (Due 5/25 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-24 09:00:00', 10, 4, '', ''),
('STRETCH Spotlight Deliverable: React Context', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-25 09:00:00', 10, 4, '', ''),
('Team Assessment Project', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 4, '2022-05-26 09:00:00', 150, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-04-29 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked React Zodiac', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 5, '2022-04-26 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Animal Farm', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-04-27 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Tech Resume Outline (Due 4/29 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-04-28 09:00:00', 10, 4, '', ''),
('Deliverable: Half-Baked Busy Town', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 5, '2022-04-29 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Busy Zoo', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-04-30 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Import and Display a List Practice, React-style!', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-01 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-02 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked City Postcard Builder', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 5, '2022-05-03 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Fast-Food Order App', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-04 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Personal Presentations (Due 5/9 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-05 09:00:00', 10, 4, '', ''),
('Deliverable: Half-Baked Goblin Builder', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 5, '2022-05-06 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Movie List Maker', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-07 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Async Fetch and Display a List Practice, React-style!', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-08 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-09 09:00:00', 5, 4, '', ''),
('Deliverable: Half-Baked Beanie-Baby List/Detail', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 5, '2022-05-10 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Your List/Detail', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-11 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: Making Network Connections (Due 5/13 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-12 09:00:00', 20, 4, '', ''),
('Deliverable: Half-Baked Board Game Inventory', '{"blocks":[{"key":"5nu90","text":"Learning Objectives","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"crrq8","text":"Identify and describe the core JavaScript types: strings, numbers, objects, arrays, undefined/null, and booleans.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eenfh","text":"Describe the difference between let and const, and describe when each is useful.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fv349","text":"Describe the relationship between state and view in an application.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c997j","text":"Increment numerical state, stored in a let, in response to a user event (usually a click).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1l79m","text":"Derive implicit numerical state using explicitly tracked numerical state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"et812","text":"When updating numerical state on click, update the DOM to reflect the new state to the user.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"86ifi","text":"Create an array of primitive values and access any item in that array by index using bracket notation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2a8iq","text":"Use document.getElementById to grab a DOM element by id","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cc600","text":"Add an event listener to a grabbed button element and call a function (console.log , alert , etc) inside that event listener.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i2sj","text":"On click, manipulate the textContent, style.color, and style.backgroundColor of a DOM element with a hard-coded string value","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8u612","text":"On click, use classList.toggle() to add a css class to a DOM element.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"467u7","text":"Describe the difference between declaring and calling a function.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"epacu","text":"Describe the benefits and risks of both WET (write everything twice) and DRY (dont repeat yourself) code","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ac0v","text":"Write an impure function to bundle and reuse DOM manipulation that is repeated multiple times","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bpvea","text":"Use Math.random to get a random item from an array","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4k8cj","text":"Use a truthy/falsey expression in an if/else statement to perform an action conditionally","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"509rp","text":"Describe the difference between (and give examples of) true and truthy, false and falsey values.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2o8t6","text":"Suggested Order","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16s5","text":"Call the handleGuess functions first inside event handlers","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"enpko","text":"Pass the correct arguments to the handleGuess functions","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3rase","text":"Finish the handleGuess declaration","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5r865","text":"Buggy Hide and Seek","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":19,"key":0}],"data":{}},{"key":"d1tgn","text":"Live Example:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eu2jo","text":"https://alchemycodelab.github.io/web-01-hide-and-seek/","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":54,"key":1}],"data":{}},{"key":"cd1d7","text":"User should be able to . . .Visit the deployed pages on GitHub pages, with link in the About section of the Github repo1See three hiding places, with a button beneath each of them.1Events . . .On clicking a hiding place button, the total number of guesses increment1On clicking the correct hiding place button, the total number of correct guesses increment1On clicking the incorrect hiding place button, the number of incorrect guesses increments1On click, see the correct hiding places image change, clearing out the previous correct guess style1FunctionsIMPURE: getRandomHidingSpot() : returns random item from given array2IMPURE: handleGuess(userGuess, correctSpot)2","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":28,"style":"BOLD"},{"offset":181,"length":12,"style":"BOLD"},{"offset":547,"length":9,"style":"BOLD"},{"offset":564,"length":60,"style":"CODE"},{"offset":633,"length":35,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"6halk","text":"Stretch Goal ideas (just for fun)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1db35","text":"keep track of how many times the user guesses each spot (tree: 4, shed: 3, etc)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cdv61","text":"imagine a hide and seek game with two hiders. make it so there are 5 hiding spots and two places count as correct (with styles correctly applied).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":86,"length":3,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"al5ss","text":"track and display a history of all the users choices","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bff61","text":"track and display a history of all the actual hiding spots","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/","url":"https://github.com/alchemycodelab/buggy-js-hide-and-seek/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alchemycodelab.github.io/web-01-hide-and-seek/","rel":"nofollow","url":"https://alchemycodelab.github.io/web-01-hide-and-seek/"}}}} ', 5, '2022-05-13 09:00:00', 10, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Deliverable: From Scratch Your Inventory', '{"blocks":[{"key":"5nu90","text":"The Golden Rule:","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eecu0","text":"🦸 🦸‍♂️ Stop starting and start finishing. 🏁","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":7,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"492p4","text":"If you work on more than one feature at a time, you are guaranteed to multiply your bugs and your anxiety.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"as2ci","text":"Making a plan","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ij0n","text":"Make a drawing of your app. Simple \"wireframes\"","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":47,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"51dlt","text":"Once you have a drawing, name the HTML elements youll need to realize your vision","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1mt8u","text":"For each HTML element ask: Why do I need this? (i.e., \"we need div to display the results in\")","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":94,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"e4i5l","text":"Once we know why we need each element, think about how to implement the \"Why\" as a \"How\" (i.e., resultsEl.textContent = newResults)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":131,"style":"BOLD"},{"offset":13,"length":3,"style":"ITALIC"},{"offset":96,"length":34,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"dempm","text":"Find all the events (user clicks, form submit, on load etc) in your app. Ask one by one, \"What happens when\" for each of these events. Does any state change?","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":157,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dgbu1","text":"Think about how to validate each of your features according to a Definition of Done. (Hint: console.log usually helps here.)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":124,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bronj","text":"Consider what features depend on what other features. Use this dependency logic to figure out what order to complete tasks.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":123,"style":"BOLD"},{"offset":23,"length":6,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"3spgo","text":"HTML Setup","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2dt9l","text":"3 image tags","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"end9f","text":"Why? to show the user the correct cup","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"61l25","text":"How? cupImg.src = assets/cup-with-ball.png","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":37,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"7fbgl","text":"3 \"destination\" elements","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4encq","text":"Why? To show the user the wins, losses, and total state as they change","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9p0qj","text":"How? winsEl.textContent = winCount","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":5,"length":29,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"gbs7","text":"3 buttonsWhy? To let the user make a guess\nHow? button.addEventListener(click, () => {})\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":48,"length":41,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"2p5r3","text":"State","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ped4","text":"wins = 0 total = 0","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vng7","text":"Events -- this is the hard part","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8nki6","text":"User clicks one of the buttons(address the \"every cup has a ball\" problem)\nincrement total\n\ndid the user guess the correct cup?the app needs to decide which one is correct\nif so, increment the wins\n\nupdate the DOM to show two things:the correct cup image element should update\nthe wins, losses, and total elements show update\n","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-14 09:00:00', 20, 4, 'https://github.com/alchemycodelab/web-template', 'https://github.com/alchemycodelab/city-builder-feb2022'),
('Spotlight Deliverable: React Class Components Refactor', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-15 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-16 09:00:00', 5, 4, '', ''),
('Deliverable: From Scratch Pokedex Proxy', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-17 09:00:00', 20, 4, '', ''),
('Deliverable: Half-Baked Yelp Proxy', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-18 09:00:00', 10, 4, '', ''),
('Spotlight Deliverable: Answering "Tell Me About Yourself" (Due 5/18 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-19 09:00:00', 10, 4, '', ''),
('Deliverable: From Scratch React Libraries and Testing', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-20 09:00:00', 20, 4, '', ''),
('Spotlight Deliverable: Customer Munge', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-21 09:00:00', 10, 4, '', ''),
('Weekly Retrospective', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-22 09:00:00', 5, 4, '', ''),
('Deliverable: From Scratch Movie Watchlist Group Project', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-23 09:00:00', 20, 4, '', ''),
('Spotlight Deliverable: STAR Interview Method (Due 5/25 at 9 AM)', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-24 09:00:00', 10, 4, '', ''),
('STRETCH Spotlight Deliverable: React Context', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-25 09:00:00', 10, 4, '', ''),
('Team Assessment Project', '{"blocks":[{"key":"d3nhv","text":"Learning happens faster when you take some time to reflect on your progress. Consider this a weekly journal entry to that effect.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5tgod","text":"Below are some questions you may want to consider. Feel free to answer any, all, or none of them, as suits your reflection:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bvdq","text":"Think back to this time last week: what specifically can you do today that you couldnt do then?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"342h5","text":"What worked this week? What didnt? Any major victories or breakthrough moments?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"29ue","text":"Were there times when you felt like you were just spinning your wheels this week? What got you unstuck?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9dr26","text":"What specific tasks felt most challenging? Try to be specific, maybe even copying and pasting learning objectives from READMEs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"engao","text":"What could you do to address areas of weakness? How can we help?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}}', 5, '2022-05-26 09:00:00', 150, 4, '', '');

INSERT INTO submissions (text, status_id, assignment_id, user_id, grade) VALUES 
('Beau Submission for Soccer Score Keeper', 4, 1, 10, 10),
('Beau Submission for Poll Maker', 4, 2, 10, 10),
('Beau Submission for Mushroom Festival', 4, 3, 10, 6),
('Beau Submission for Goblin Fighter', 1, 4, 10, null);

INSERT INTO tickets (text, status_id, assignment_id, ta_id, user_id) VALUES
('please help me', 1, 3, 4, 9),
('This assignment is hard', 2, 5, 4, 10),
('Im stuck in infinity', 2, 7, 5, 11),
('wow', 1, 3, 5, 9)
;

INSERT INTO user_to_cohort (cohort_id, user_id) VALUES 
(1, 4),
(1, 5),
(1, 8),
(1, 9),
(1, 10),
(1, 11),
(2, 6),
(2, 7),
(2, 12),
(2, 13);

INSERT INTO entities (id, name) VALUES
(100, 'assignments'),
(200, 'cohorts'),
(300, 'syllabus'),
(400, 'submissions'),
(500, 'users'),
(600, 'tickets'),
(700, 'comments');

INSERT INTO comments (text, status_id, user_id, target_entity, target_entity_id) VALUES
('testing the comment system, comment on Beau Poll Maker', 2, 10, 400, 2),
('testing the comment system, Beau commenting on the Feb Cohort', 2, 10, 200, 1);